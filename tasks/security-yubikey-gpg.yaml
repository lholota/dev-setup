- name: Install required packages
  ansible.builtin.apt:
    name: 
      - scdaemon
      - pcscd

- name: Create .gnupg directory
  ansible.builtin.file:
    path: "/home/{{ lookup('env', 'USER') }}/.gnupg"
    owner: "{{ lookup('env', 'USER') }}"
    group: "{{ lookup('env', 'USER') }}"
    mode: 0700
    state: directory

- name: Configure scdaemon
  ansible.builtin.copy:
    dest: "/home/{{ lookup('env', 'USER') }}/.gnupg/scdaemon.conf"
    owner: "{{ lookup('env', 'USER') }}"
    group: "{{ lookup('env', 'USER') }}"
    mode: 0600
    content: |
      disable-ccid
      pcsc-driver /usr/lib/x86_64-linux-gnu/libpcsclite.so.1
      card-timeout 1

      # Always try to use yubikey as the first reader
      # even when other smart card readers are connected
      # Name of the reader can be found using the pcsc_scan command
      # If you have problems with gpg not recognizing the Yubikey
      # then make sure that the string here matches exacly pcsc_scan
      # command output. Also check journalctl -f for errors.
      reader-port Yubico YubiKey

- name: Configure gpg
  ansible.builtin.lineinfile:
    dest: "/home/{{ lookup('env', 'USER') }}/.gnupg/gpg.conf"
    owner: "{{ lookup('env', 'USER') }}"
    group: "{{ lookup('env', 'USER') }}"
    create: true
    mode: 0600
    regexp: '^trust-model'
    line: trust-model tofu+pgp
    state: present

- name: Download public key
  become: false
  ansible.builtin.get_url:
    url: "{{ gpg_public_key_url }}"
    dest: /tmp/public.asc
    force: true

- name: Import public key into GPG
  become: false
  ansible.builtin.command:
    cmd: gpg --import /tmp/public.asc

- name: Get SSH agent path
  become: false
  changed_when: false
  ansible.builtin.shell:
    cmd: "gpgconf --list-dirs | grep ssh | cut -d: -f2"
  register: ssh_agent_path

- name: Set the SSH agent path to bashrc variable
  ansible.builtin.lineinfile:
    path: "{{ lookup('env', 'HOME') }}/.bashrc"
    create: false
    regex: "^SSH_AUTH_SOCK="
    line: "SSH_AUTH_SOCK={{ ssh_agent_path.stdout }}"